"""
Comando Django para criar um usu√°rio administrador automaticamente
"""
from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from core.models import Guardian


class Command(BaseCommand):
    help = 'Cria um usu√°rio administrador do Django com ID do Discord'

    def add_arguments(self, parser):
        parser.add_argument(
            '--discord-id',
            type=str,
            default='1369940071246991380',
            help='ID do Discord do administrador (padr√£o: konnakrc)'
        )
        parser.add_argument(
            '--username',
            type=str,
            default='konnakrc',
            help='Nome de usu√°rio do administrador'
        )
        parser.add_argument(
            '--email',
            type=str,
            default='admin@guardiao.com',
            help='Email do administrador'
        )

    def handle(self, *args, **options):
        discord_id = options['discord_id']
        username = options['username']
        email = options['email']
        
        self.stdout.write(f"üîß Criando usu√°rio administrador...")
        self.stdout.write(f"   Discord ID: {discord_id}")
        self.stdout.write(f"   Username: {username}")
        self.stdout.write(f"   Email: {email}")
        
        # Verificar se o usu√°rio j√° existe
        if User.objects.filter(username=username).exists():
            self.stdout.write(
                self.style.WARNING(f"‚ö†Ô∏è Usu√°rio '{username}' j√° existe!")
            )
            user = User.objects.get(username=username)
        else:
            # Criar novo usu√°rio
            user = User.objects.create_user(
                username=username,
                email=email,
                password='admin123'  # Senha padr√£o - deve ser alterada
            )
            self.stdout.write(
                self.style.SUCCESS(f"‚úÖ Usu√°rio '{username}' criado com sucesso!")
            )
        
        # Tornar superusu√°rio
        user.is_superuser = True
        user.is_staff = True
        user.is_active = True
        user.save()
        
        self.stdout.write(
            self.style.SUCCESS(f"‚úÖ Usu√°rio '{username}' configurado como superusu√°rio!")
        )
        
        # Verificar se existe Guardian com esse Discord ID
        try:
            guardian = Guardian.objects.get(discord_id=int(discord_id))
            self.stdout.write(
                self.style.SUCCESS(f"‚úÖ Guardian encontrado: {guardian.discord_display_name}")
            )
        except Guardian.DoesNotExist:
            self.stdout.write(
                self.style.WARNING(f"‚ö†Ô∏è Nenhum Guardian encontrado com Discord ID: {discord_id}")
            )
            self.stdout.write("   Execute o login via Discord para criar o Guardian automaticamente.")
        
        self.stdout.write("\n" + "=" * 50)
        self.stdout.write(self.style.SUCCESS("üéâ Configura√ß√£o de administrador conclu√≠da!"))
        self.stdout.write("\nüìã Informa√ß√µes de acesso:")
        self.stdout.write(f"   ‚Ä¢ URL Admin: /admin/")
        self.stdout.write(f"   ‚Ä¢ Username: {username}")
        self.stdout.write(f"   ‚Ä¢ Password: admin123")
        self.stdout.write(f"   ‚Ä¢ Discord ID: {discord_id}")
        self.stdout.write("\n‚ö†Ô∏è IMPORTANTE: Altere a senha padr√£o ap√≥s o primeiro login!")
        self.stdout.write("=" * 50)
